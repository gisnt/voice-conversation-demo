C51 COMPILER V9.00   SYN6288                                                               11/14/2021 10:08:13 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE SYN6288
OBJECT MODULE PLACED IN ..\obj\Syn6288.obj
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE Syn6288.c BROWSE INCDIR(..\code;..\user) DEBUG OBJECTEXTEND OBJECT(..\obj\S
                    -yn6288.obj)

line level    source

   1          #include "config.h"
   2          
   3          /**************芯片设置命令*********************/
   4          uint8 SYN_StopCom[] = {0xFD, 0X00, 0X02, 0X02, 0XFD}; //停止合成
   5          uint8 SYN_SuspendCom[] = {0XFD, 0X00, 0X02, 0X03, 0XFC}; //暂停合成
   6          uint8 SYN_RecoverCom[] = {0XFD, 0X00, 0X02, 0X04, 0XFB}; //恢复合成
   7          uint8 SYN_ChackCom[] = {0XFD, 0X00, 0X02, 0X21, 0XDE}; //状态查询
   8          uint8 SYN_PowerDownCom[] = {0XFD, 0X00, 0X02, 0X88, 0X77}; //进入POWER DOWN 状态命令
   9          //Music:  0:无背景音乐  1~15:选择背景音乐
  10          
  11          void SYN_FrameInfo(uint8 Music, uint8 *HZdata)
  12          {
  13   1        /****************需要发送的文本**********************************/
  14   1        unsigned  char  xdata Frame_Info[350];
  15   1        unsigned  char  HZ_Length;
  16   1        unsigned  char  ecc  = 0;                     //定义校验字节
  17   1        unsigned  int i = 0;
  18   1        HZ_Length = strlen(HZdata);                   //需要发送文本的长度
  19   1      
  20   1        /*****************帧固定配置信息**************************************/
  21   1        Frame_Info[0] = 0xFD ;                        //构造帧头FD
  22   1        Frame_Info[1] = 0x00 ;                        //构造数据区长度的高字节
  23   1        Frame_Info[2] = HZ_Length + 3;                //构造数据区长度的低字节
  24   1        Frame_Info[3] = 0x01 ;                        //构造命令字：合成播放命令
  25   1        Frame_Info[4] = 0x01 | Music << 4 ; //构造命令参数：背景音乐设定
  26   1      
  27   1        /*******************校验码计算***************************************/
  28   1        for(i = 0; i < 5; i++)                                //依次发送构造好的5个帧头字节
  29   1        {
  30   2          ecc = ecc ^ (Frame_Info[i]);                //对发送的字节进行异或校验
  31   2        }
  32   1      
  33   1        for(i = 0; i < HZ_Length; i++)                //依次发送待合成的文本数据
  34   1        {
  35   2          ecc = ecc ^ (HZdata[i]);                            //对发送的字节进行异或校验
  36   2        }
  37   1        /*******************发送帧信息***************************************/
  38   1        memcpy(&Frame_Info[5], HZdata, HZ_Length);
  39   1        Frame_Info[5 + HZ_Length] = ecc;
  40   1        UART_Send_String(Frame_Info, 5 + HZ_Length + 1);
  41   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    157    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----     350
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     25       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
